version: 0.2

phases:
  install:
    commands:
      - echo Installing dependencies...
      - apt-get update
      - apt-get install -y jq wget unzip
      - echo Installing Terraform...
      - wget https://releases.hashicorp.com/terraform/1.6.2/terraform_1.6.2_linux_amd64.zip
      - unzip terraform_1.6.2_linux_amd64.zip
      - mv terraform /usr/local/bin/
      - terraform --version  # Verifying the installation

  pre_build:
    commands:
      # - echo Verifying S3 permissions for list and access
      #  aws s3 ls s3://devops-tf-state-bookyland
      - echo "Logging in to Docker Hub..."
      - export DOCKERHUB_TOKEN=$(aws ssm get-parameter --name $SSM_PARAM_DOCKERHUB_TOKEN_NAME --with-decryption --query "Parameter.Value" --output text)
      - echo "$DOCKERHUB_TOKEN" | docker login --username "$DOCKERHUB_USER" --password-stdin

      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com

      - echo Getting SSM parameters
      - export TF_VAR_db_password=$(aws ssm get-parameter --name $SSM_PARAM_DB_PASSWORD_NAME --with-decryption --query "Parameter.Value" --output text)

      # set environment based on Git branches
      - export TF_WORKSPACE=$CODEBUILD_GIT_BRANCH

  build:
    commands:
      - echo Building Docker image...
      - docker build --compress -t $ECR_URI:$CODEBUILD_RESOLVED_SOURCE_VERSION -f ./app/Dockerfile ./app

  post_build:
    commands:
      - echo "Tagging and pushing Docker image..."
      - docker tag $ECR_URI:$CODEBUILD_RESOLVED_SOURCE_VERSION $ECR_URI:latest
      - docker push $ECR_URI:$CODEBUILD_RESOLVED_SOURCE_VERSION
      - docker push $ECR_URI:latest

      - echo Initializing and applying Terraform...
      - cd infra/
      - terraform -chdir=deploy/ init
      - terraform -chdir=deploy/ workspace select  -or-create $TF_WORKSPACE
      - terraform -chdir=deploy/ apply -auto-approve

      - echo "Terraform deployment completed for environment $TF_WORKSPACE"

cache:
  paths:
    - /root/.cache/docker # Docker cache if applicable
